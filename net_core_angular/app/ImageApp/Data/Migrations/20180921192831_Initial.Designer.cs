// <auto-generated />

using System;
using ImageApp.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;

namespace ImageApp.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20180921192831_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ImageApp.Data.Models.ImageModelDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContentImageUrl")
                        .IsRequired();

                    b.Property<string>("ContentImageUrlThumb")
                        .IsRequired();

                    b.Property<string>("ContentType")
                        .IsRequired();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("Height");

                    b.Property<long>("Length");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Title")
                        .IsRequired();

                    b.Property<int>("Width");

                    b.HasKey("Id");

                    b.ToTable("ImageModel");
                });

            modelBuilder.Entity("ImageApp.Data.Models.ImageModelDetailsDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("ImageId");

                    b.Property<string>("Mid")
                        .IsRequired();

                    b.Property<double>("Score");

                    b.Property<double>("Topicality");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.ToTable("ImageModelDetails");
                });

            modelBuilder.Entity("ImageApp.Data.Models.ImageModelDetailsWebDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("EntityId");

                    b.Property<int>("ImageId");

                    b.Property<double>("Score");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.ToTable("ImageModelDetailsWeb");
                });

            modelBuilder.Entity("ImageApp.Data.Models.ImageModelWebMatchesDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ImageId");

                    b.Property<string>("PageTitle");

                    b.Property<string>("Url");

                    b.Property<string>("UrlImage");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.ToTable("ImageModelWebMatches");
                });

            modelBuilder.Entity("ImageApp.Data.Models.ImageModelDetailsDb", b =>
                {
                    b.HasOne("ImageApp.Data.Models.ImageModelDb", "Image")
                        .WithMany("ImageModelDetails")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ImageApp.Data.Models.ImageModelDetailsWebDb", b =>
                {
                    b.HasOne("ImageApp.Data.Models.ImageModelDb", "Image")
                        .WithMany("ImageModelDetailsWeb")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ImageApp.Data.Models.ImageModelWebMatchesDb", b =>
                {
                    b.HasOne("ImageApp.Data.Models.ImageModelDb", "Image")
                        .WithMany("ImageModelWebMatches")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
